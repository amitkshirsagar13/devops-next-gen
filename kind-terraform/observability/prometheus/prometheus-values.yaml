# https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml



global:
  # How frequently to scrape targets
  scrape_interval:     10s
  # How frequently to evaluate rules
  evaluation_interval: 10s

alertmanager:
  alertmanagerSpec:
    externalURL: http://alert.${cluster_name}.localtest.me
  config:
    receivers:
      - name: 'null'
      - name: Watchdog-HealthCheck.io
        webhook_configs:
          - url: https://hc-ping.com/bdc7a25a-f522-4ccc-b801-2ee226e0c03d
      # - name: DEAD-MAN-SNITCH
      #   webhook_configs:
      #     - url: "https://nosnch.in/112081fd96"
      - name: dev-kind-slack
        slack_configs:
        - api_url: "${slackApiUrl}"
          channel: '#dev-kind'
          title: 'Cluster: ${cluster_name} | [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] Monitoring Event Notification'
          title_link: 'http://alert.${cluster_name}.localtest.me/#/alerts'
          text: >-
            {{ range .Alerts }}
                *Alert:* Cluster: ${cluster_name} | {{ .Annotations.summary }} - `{{ .Labels.severity }}`
              *Description:* {{ .Annotations.description }}
              *Graph:* <{{ .GeneratorURL }}|:chart_with_upwards_trend:> *Runbook:* <{{ .Annotations.runbook }}|:spiral_note_pad:>
              *Details:*
              {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
              {{ end }}
            {{ end }}

    route:
      routes:
        # - match:
        #     alertname: Watchdog-Watchdog
        #   receiver: DEAD-MAN-SNITCH
        #   group_wait: 0s
        #   group_interval: 1m
        #   repeat_interval: 50s
        - match:
            alertname: Watchdog
          receiver: Watchdog-HealthCheck.io
          group_wait: 0s
          group_interval: 5m
          repeat_interval: 4m
          continue: true
        - match:
            alertname: TargetDown
            namespace: kube-system
          receiver: dev-kind-slack
          group_wait: 0s
          group_interval: 15m
          repeat_interval: 30m
        - match:
            alertname: TargetDown
            namespace: nginx
          receiver: dev-kind-slack
          group_wait: 0s
          group_interval: 15m
          repeat_interval: 1h
        - match:
            alertname: TargetDown
            namespace: monitoring
          receiver: dev-kind-slack
          group_wait: 0s
          group_interval: 1h
          repeat_interval: 5h
        - match:
            alertname: TargetDown
            namespace: logging
          receiver: dev-kind-slack
          group_wait: 0s
          group_interval: 1h
          repeat_interval: 8h
        - match:
            alertname: etcdInsufficientMembers
          receiver: dev-kind-slack
          group_wait: 0s
          group_interval: 8h
          repeat_interval: 1d
        - match:
            alertname: AlertmanagerClusterFailedToSendAlerts
          receiver: dev-kind-slack
          group_wait: 0s
          group_interval: 1m
          repeat_interval: 50s
        - match:
            alertname: AlertmanagerFailedToSendAlerts
          receiver: dev-kind-slack
          group_wait: 0s
          group_interval: 1m
          repeat_interval: 50s
        - match:
            alertname: FluentdCloudWatchLogsNotShipping
            namespace: logging
          receiver: dev-kind-slack
          group_wait: 0s
          group_interval: 15m
          repeat_interval: 1h

prometheus:
  prometheusSpec:
    enableRemoteWriteReceiver: true
    remoteWriteDashboards: true
    remoteWrite:
    - url: https://metric-api.newrelic.com/prometheus/v1/write?prometheus_server=kind-.${cluster_name}
      bearerToken: LICENCE_KEY
      writeRelabelConfigs:
      - sourceLabels: [__name__]
        regex: "alertmanager_(.*)|prometheus_(.*)"
        action: keep
    # - url: "http://localhost:9009/api/prom/push"


    # web:
    #   externalUrl: http://prom.${cluster_name}.localtest.me
    externalUrl: http://prom.${cluster_name}.localtest.me

prometheus-node-exporter:
  hostRootFsMount:
    enabled: false

grafana:
  adminPassword: admin
