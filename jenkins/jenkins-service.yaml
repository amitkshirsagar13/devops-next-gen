---
apiVersion: v1
kind: Namespace
metadata:
  name: cicd
  labels:
    name: cicd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: cicd
spec:
  selector:
    matchLabels:
      app: jenkins
  replicas: 1
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      # securityContext:
        # Specify fsGroup for pod, so that the persistent volume is writable for the non-privileged uid/gid 1000
        # runAsUser: 0
      hostname: jenkins-master
      containers:
      - name: jenkins-master
        image: amitkshirsagar13/devops-jenkins:2.391
        imagePullPolicy: Always
        ports:
        - name: master
          containerPort: 8080
        - name: agent
          containerPort: 50000
        volumeMounts:
          - name: dockersock
            mountPath: "/var/run/docker.sock"
        resources:
          limits:
            cpu: "1.0"
            memory: "900Mi"
          requests:
            cpu: "0.15"
            memory: "250Mi"
      volumes:
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace: cicd
spec:
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: master
  - port: 50000
    targetPort: 50000
    protocol: TCP
    name: agent
  selector:
    app: jenkins
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jenkins-ingress
  namespace: cicd
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  # http://jenkins.localtest.me
  - host: jenkins.localtest.me
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jenkins-service
            port:
              number: 80